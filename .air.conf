# Config file for [Air](https://github.com/cosmtrek/air) in TOML format

# 工作目录
# . 或绝对路径，请注意下面的目录必须在根目录下。
root = "."
tmp_dir = "tmp"

[build]
# 只是普通的shell命令。你也可以用make。
# go build -o ./tmp/main
cmd = "go build -o ./tmp/main.exe ."
# 二进制文件从' cmd '产生。
bin = "tmp/main"
# 自定义二进制。linux: APP_ENV=dev APP_USER=air ./tmp/main
full_bin = "./tmp/main.exe"
# 注意这些文件扩展名。
include_ext = ["go", "tpl", "tmpl", "html", "yml"]
# 忽略这些文件扩展名或目录。
exclude_dir = ["assets", "tmp", "vendor", "logs", "files", "examples"]
# 如果您指定的话，请查看这些目录。
include_dir = []
# 排除的文件。
exclude_file = []
# 排除特定的正则表达式。
exclude_regex = ["_test\\.go"]
# 排除未修改的文件。
exclude_unchanged = true
# 按照符号链接查找目录
follow_symlink = true
# 该日志文件放在tmp_dir中。
log = "air.log"
# 如果文件更改太频繁，没有必要在每次更改时触发构建。
delay = 1000 # ms
# 当生成错误发生时，停止运行旧的二进制文件。
stop_on_error = true
# 在终止进程之前发送中断信号(windows不支持此功能)
send_interrupt = false
# 发送中断信号后的延时
kill_delay = 500 # ms
# 在运行二进制文件(bin/full_bin)时添加其他参数。将运行'。/tmp/main hello world'。
args_bin = ["hello", "world"]

[log]
# Show log time
time = false

[color]
# 自定义每个部件的颜色。如果没有找到颜色，使用原始的应用程序日志。
main = "magenta"
watcher = "cyan"
build = "yellow"
runner = "green"

[misc]
# 退出时删除tmp目录
clean_on_exit = true